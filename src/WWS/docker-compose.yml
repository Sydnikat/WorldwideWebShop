version: '3.4'

services:
  inventory:
    container_name: "wws_inventory"
    image: ${DOCKER_REGISTRY:-wws}inventory:${IMAGE_TAG:-latest}
    build:
      context: ./Inventory/inventory
      dockerfile: Dockerfile
    networks:
      - wws-network
    depends_on:
      - mssql

  order:
     container_name: "wws_order"
     image: ${DOCKER_REGISTRY:-wws}order:${IMAGE_TAG:-latest}
     build:
      context: .
      dockerfile: Order/Web/Dockerfile
     networks:
      - wws-network
     depends_on:
      - mssql

  user:
     container_name: "wws_user"
     image: ${DOCKER_REGISTRY:-wws}user:${IMAGE_TAG:-latest}
     build:
      context: .
      dockerfile: User/Web/Dockerfile
     networks:
      - wws-network
     depends_on:
      - mongodb

  mssql:
    container_name: "wws_mssql"
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
      SA_PASSWORD: "WWSPass420*"
      ACCEPT_EULA: "Y"
    networks:
      - wws-network
    volumes:
      - ./wws-mssql-data:/var/opt/mssql/data

  mongodb:
    container_name: "wws_mongodb"
    image: mongo:4.2.8
    networks:
      - wws-network
    volumes:
      - wws-mongo-data:/data/db

  redis:
    container_name: "wws_redis"
    image: redis:6.0.5-alpine
    networks:
      - wws-network

volumes:
  wws-mssql-data:
    driver: local
  wws-mongo-data:
    driver: local
  
networks:
  wws-network:
    driver: bridge

