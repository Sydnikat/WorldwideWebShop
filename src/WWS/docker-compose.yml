version: '3.4'

services:
  apigateway:
    container_name: "wws_apigateway"
    image: traefik:v2.2.1
    ports:
      - "5080:80" 
      - "5088:8080" 
    command:
      - "--api.insecure=true"
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock 
    networks:
      - wws-network

  mail:
    container_name: "wws_mail"
    image: ${DOCKER_REGISTRY:-wws}mail:${IMAGE_TAG:-latest}
    build:
      context: ./Mail/mail
      dockerfile: Dockerfile
    networks:
      - wws-network
      
  inventory:
    container_name: "wws_inventory"
    image: ${DOCKER_REGISTRY:-wws}inventory:${IMAGE_TAG:-latest}
    build:
      context: ./Inventory/inventory
      dockerfile: Dockerfile
    networks:
      - wws-network
    depends_on:
      - mssql
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.inventory.rule=PathPrefix(`/api/inventory`)" 
      - "traefik.http.routers.inventory.middlewares=inventory-auth@docker"
      - "traefik.http.middlewares.inventory-auth.forwardauth.address=http://wws_user/auth/check"

  order:
     container_name: "wws_order"
     image: ${DOCKER_REGISTRY:-wws}order:${IMAGE_TAG:-latest}
     build:
      context: .
      dockerfile: Order/Web/Dockerfile
     networks:
      - wws-network
     depends_on:
      - mssql
     labels:
      - "traefik.enable=true"
      - "traefik.http.routers.order.rule=PathPrefix(`/api/order`)" 
      - "traefik.http.routers.order.middlewares=order-auth@docker"
      - "traefik.http.middlewares.order-auth.forwardauth.address=http://wws_user/auth/check"

  user:
     container_name: "wws_user"
     image: ${DOCKER_REGISTRY:-wws}user:${IMAGE_TAG:-latest}
     build:
      context: .
      dockerfile: User/Web/Dockerfile
     networks:
      - wws-network
     depends_on:
      - mongodb
     labels:
      - "traefik.enable=true"
      - "traefik.http.routers.auth.rule=PathPrefix(`/auth`)"
      - "traefik.http.routers.users.rule=PathPrefix(`/api/users`)"

  rabbitmq:
    container_name: "wws_rabbitmq"
    image: rabbitmq:3-management-alpine
    hostname: rabbitmq
    networks:
      - wws-network

  mssql:
    container_name: "wws_mssql"
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
      SA_PASSWORD: "WWSPass420*"
      ACCEPT_EULA: "Y"
    networks:
      - wws-network
    volumes:
      - ./wws-mssql-data:/var/opt/mssql/data

  mongodb:
    container_name: "wws_mongodb"
    image: mongo:4.2.8
    networks:
      - wws-network
    volumes:
      - wws-mongo-data:/data/db

  redis:
    container_name: "wws_redis"
    image: redis:6.0.5-alpine
    networks:
      - wws-network

volumes:
  wws-mssql-data:
    driver: local
  wws-mongo-data:
    driver: local
  
networks:
  wws-network:
    driver: bridge

